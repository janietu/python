isalnum  lower   ---------------------

import string
class Solution:
    def isPalindrome(self, s: str) -> bool:
        l = 0 
        r = len(s)-1
        while l < r:
            while l<r and  not s[l].isalnum():
                l+=1
            while l<r and not s[r].isalnum():
                r-=1
            if s[l].lower()!=s[r].lower():
                return False
        return True
            
    -------
    import string
class Solution:
    def isPalindrome(self, s: str) -> bool:
        i = 0 
        tt=[]
        Utable=string.ascii_uppercase
        Ltable=string.ascii_lowercase
        number=[1,2,3,4,5,6,7,8,9,0]
        
        for ss in s:
            if ss.isalnum():
                if ss in Utable:
                    index = Utable.index(ss)
                    tt.append(Ltable[index])
                else:
                    tt.append(ss)
      
        kk=tt
        l = 0
        r= len(tt)-1
        while l < r:
            if tt[l] != tt[r]:
                return False
            l+=1
            r-=1
        return True
