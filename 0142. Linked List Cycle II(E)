# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        def findmeetpoint(head):
            slow=head
            fast=head
            while(fast and fast.next):
                slow=slow.next
                fast=fast.next.next
                if(slow == fast):
                    return slow
            return None


        meetpoint=findmeetpoint(head);
        if meetpoint == None:
            return None
        while meetpoint != head:
            meetpoint=meetpoint.next
            head=head.next
        
        return head
    

        
        
         
